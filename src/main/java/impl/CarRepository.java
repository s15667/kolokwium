package impl;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import domain.Car;
import domain.CarType;
import mappers.IMapper;
import repositories.ICarRepository;
import uow.IUnitOfWork;

public class CarRepository extends RepositoryBase<Car> implements ICarRepository{


	public CarRepository(Connection connection, IMapper<Car> mapper, IUnitOfWork uow) throws SQLException {
		super(connection, mapper, uow);
	}
	
	protected String createTableSql() {
		return "CREATE TABLE car("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "brand VARCHAR(20),"
				+ "model VARCHAR(20),"
				+ "yearOfProduction INT,"
				+ "mileage INT,"
				+ "carType VARCHAR(20)"
				+ ")";
	}
	
	protected String getTableName(){
		return "car";
	}
	
	protected String getUpdateSql(){
		return "UPDATE car SET (brand, model, yearOfProduction, mileage, carType)=(?,?,?,?,?) WHERE id=?";
	}
	
	protected String getInsertSql() {
		return "INSERT INTO car(brand, model, yearOfProduction, mileage, carType) VALUES(?,?,?,?,?)";
	}

	@Override
	protected void setInsert(Car car) throws SQLException {
		insert.setString(1, car.getBrand());
		insert.setString(2, car.getModel());
		insert.setInt(3, car.getYearOfProduction());
		insert.setInt(4, car.getMileage());
		insert.setString(5, car.getCarType().toString());
		
	}

	@Override
	protected void setUpdate(Car car) throws SQLException {
		update.setString(1, car.getBrand());
		update.setString(2, car.getModel());
		update.setInt(3, car.getYearOfProduction());
		update.setInt(4, car.getMileage());
		update.setString(5, car.getCarType().toString());
		update.setInt(6, car.getId());
	}

	public List<Car> withType(CarType carType) {
		List<Car> c = new ArrayList<>();
		ResultSet rs;
		try {
			select1.setString(1, carType.toString());
			rs = select1.executeQuery();
			while(rs.next()){
				c.add(_mapper.map(rs));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return c;
		
	}

	public List<Car> withModel(String model) {
		List<Car> c = new ArrayList<>();
		ResultSet rs;
		try {
			select2.setString(1, model);
			rs = select2.executeQuery();
			while(rs.next()){
				c.add(_mapper.map(rs));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return c;
	}

	public List<Car> withYearOfProduction(int from, int to) {
		List<Car> c = new ArrayList<>();
		ResultSet rs;
		try {
			select3.setInt(1, from);
			select3.setInt(2, to);
			rs = select3.executeQuery();
			while(rs.next()){
				c.add(_mapper.map(rs));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return c;
	}

	public List<Car> withMileage(int from, int to) {
		List<Car> c = new ArrayList<>();
		ResultSet rs;
		try {
			select4.setInt(1, from);
			select4.setInt(2, to);
			rs = select4.executeQuery();
			while(rs.next()){
				c.add(_mapper.map(rs));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return c;
	}

}
