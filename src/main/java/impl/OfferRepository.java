package impl;

import java.sql.Connection;
import java.sql.SQLException;

import domain.Offer;
import mappers.IMapper;
import uow.IUnitOfWork;
import repositories.IOfferRepository;

public class OfferRepository extends RepositoryBase<Offer> implements IOfferRepository {

	protected OfferRepository(Connection connection, IMapper<Offer> mapper, IUnitOfWork uow) throws SQLException {
		super(connection, mapper, uow);
	}

	@Override
	protected String createTableSql() {
		return "CREATE TABLE offer("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY,"
				+ "description VARCHAR(500),"
				+ "price FLOAT,"
				+ "creationDate VARCHAR(20),"
				+ "expireDate VARCHAR(20),"
				+ "carId INT,"
				+ "sellerId INT"
				+ ")";
	}

	@Override
	protected String getTableName() {
		return "offer";
	}

	@Override
	protected String getInsertSql() {
		return "INSERT INTO offer(description, price, creationDate, expireDate, carId, sellerId) VALUES(?,?,?,?,?,?)";
	}

	@Override
	protected String getUpdateSql() {
		return "UPDATE offer SET (description, price, creationDate, expireDate, carId, sellerId)=(?,?,?,?,?,?) WHERE id=?";
	}

	@Override
	protected void setInsert(Offer offer) throws SQLException {
		insert.setString(1, offer.getDescription());
		insert.setFloat(2, offer.getPrice());
		insert.setString(3, offer.getCreationDate());
		insert.setString(4, offer.getExpireDate());
		insert.setInt(5, offer.getCarId());
		insert.setInt(6, offer.getSellerId());
	}

	@Override
	protected void setUpdate(Offer offer) throws SQLException {
		update.setString(1, offer.getDescription());
		update.setFloat(2, offer.getPrice());
		update.setString(3, offer.getCreationDate());
		update.setString(4, offer.getExpireDate());
		update.setInt(5, offer.getCarId());
		update.setInt(6, offer.getSellerId());
		update.setInt(7, offer.getId());
	}
	
}
